swagger: "2.0"
info:
  version: 1.0.0
  title: "Russia2018"
  description: API to manage Russia2018 teams and matches' results
  termsOfService: http://swagger.io/terms/
  contact:
    name: Damiano Sartori
    email: damiano.sartori@studenti.unitn.com
    #url: 
  license:
    name: UNLICENSED
host: sartori-luglio-se2.herokuapp.com
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /teams:
    get:
      description: |
        Return all the teams that have been saved.
      operationId: getTeams
      responses:
        200:
          description: get all saved teams
          schema:
            type: array
            items:
              $ref: '#/definitions/Teams'
    post:
      description: |
        Insert a new team
      operationId: addTeam
      parameters:
        - name: team
          in: body
          required: true
          schema:
            $ref: '#/definitions/Teams'
            example: {
              "teamID": "ENG", 
              "name": "England",
              "is_still_in": true,
              "matches": [{"opponent":"Colombia", "outcome":"W"}]
            }
      responses:
        200:
          description: Team has been saved to the list
  /teams/{id}:
    get:
      description: |
        Return the team with the passed teamID.
      operationId: findTeamByID
      parameters:
        - name: id
          in: path
          required: true
          type: string
          x-example: 'CRO'
      responses:
        200:
          description: get by ID response
          schema:
            $ref: '#/definitions/Teams'
        404:
          description: Unable to find team with the specified ID
    put:
      description: |
        Update the team with the passed teamID.
      operationId: updateTeamByID
      parameters:
        - name: id
          in: path
          required: true
          type: string
          x-example: 'ENG'
        - name: team
          in: body
          required: true
          schema:
            $ref: '#/definitions/Teams'
            example: {
              "teamID": "ENG", 
              "name": "England",
              "is_still_in": true,
              "matches": [{"opponent":"Colombia", "outcome":"W"}]
            }
      responses:
        200:
          description: update teams
          schema:
            $ref: '#/definitions/Teams'
        404:
          description: Unable to find team with the specified ID
  /teams/{idT}/matches:
    post:
      description: |
        Insert a new match for a specified team
      operationId: addMatchToTeam
      parameters:
        - name: idT
          in: path
          required: true
          type: string
          x-example: "BEL"
        - name: match
          in: body
          required: true
          schema:
            $ref: '#/definitions/CupMatches'
            example: {
              "opponent": "Brazil", 
              "outcome": "W"
            }
      responses:
        200:
          description: Match has been saved to the list
        404:
          description: Unable to find team with the specified ID
  /teams/{idT}/matches/{idM}:
    get:
      description: |
        Return a specific match for a specified team.
      operationId: getMatchByTeamID
      parameters:
        - name: idT
          in: path
          required: true
          type: string
          x-example: 'CRO'
        - name: idM
          in: path
          required: true
          type: string
          x-example: 'England'
      responses:
        200:
          description: get a particular match of a team
          schema:
              $ref: '#/definitions/CupMatches'
        404:
          description: Unable to find team or matches with the specified ID
    put:
      description: |
        Update a specific match for a specified team
      operationId: updateMatch
      parameters:
        - name: idT
          in: path
          required: true
          type: string
          x-example: "BEL"
        - name: idM
          in: path
          required: true
          type: string
          x-example: "Brazil"
        - name: match
          in: body
          required: true
          schema:
            $ref: '#/definitions/CupMatches'
            example: {
              "opponent": "Brazil", 
              "outcome": "W"
            }
      responses:
        200:
          description: Match has been updated
        404:
          description: Unable to find team or matches with the specified ID
definitions:
  Teams:
    required:
      - teamID
      - name
      - is_still_in
      - matches
    properties:
      teamID:
        type: string
      name:
        type: string
      is_still_in:
        type: boolean
      matches:
        $ref: '#/definitions/CupMatches'
  CupMatches:
    required:
      - opponent
      - outcome
    properties:
      opponent:
        type: string
      outcome:
        type: string